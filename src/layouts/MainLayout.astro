---
import { ViewTransitions } from 'astro:transitions';
import FontMeta from 'src/components/head/FontMeta.astro';
import GlobalMeta from 'src/components/head/GlobalMeta.astro';
import GoogleTag from 'src/components/head/GoogleTag.astro';
import IconifyMeta from 'src/components/head/IconifyMeta.astro';
import OgFacebook from 'src/components/head/OgFacebook.astro';
import OgTwitter from 'src/components/head/OgTwitter.astro';
import { SITE_DESCRIPTION, SITE_TITLE } from 'src/consts';

import 'src/styles/global.css';
import 'src/styles/mainsite.css';

type Props = {
  light?: boolean;
  dark?: boolean;
  // Content-related properties
  title?: string | ((siteTitle: string) => string);
  description?: string;
  image?: string;
};
const { light = false, dark = false } = Astro.props;
const { title: rawTitle, description = SITE_DESCRIPTION, image } = Astro.props;

const title =
  rawTitle === undefined
    ? SITE_TITLE
    : typeof rawTitle === 'string'
      ? `${rawTitle} | ${SITE_TITLE}`
      : rawTitle(SITE_TITLE);
---

<!doctype html>
<html lang="en" transition:animate="none">
  <head>
    <ViewTransitions />
    <GoogleTag />
    {/* TODO: Deduplicate with BaseHead */}
    {/* TODO: meta canonical */}
    {/* TODO: viewtransitions bug with click listener */}
    <GlobalMeta />
    <FontMeta />
    <IconifyMeta />
    <meta
      name="color-scheme"
      content={light ? 'light' : dark ? 'dark' : 'light dark'}
    />
    {/* Content-related tags */}
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <OgFacebook title={title} description={description} image={image} />
    <OgTwitter title={title} description={description} image={image} />
  </head>
  <body class:list={[light && 'light', dark && 'dark']}>
    <div id="root"><slot /></div>
  </body>
</html>
